COMP 4300 - Assignment 2

--------------------------------------------------------------------------------------
Assignment Notes:
--------------------------------------------------------------------------------------

Submission:

For this assignment you will zip and submit the entire 'src' folder of the
assignment. you are *NOT* allowed to add any files in addition to the ones
already in the src folder from the assignment zip file. This means that you
will not be submitting ANY changes you have made to the visual studio project,
if you used it for development. ( no I'm just using Xubuntu Linux  and VSCode )

YOU MUST INCLUDE THE FOLLOWING INFO IN A COMMENT AT THE TOP OF main.cpp:
- ALL students full names, cs usernames, and student numbers
- If you did not get a specific  feature to work ( such as text centering)
  please explain what you tried to do to get it to work, and partial marks
    may be given for effort.
    

--------------------------------------------------------------------------------------
Program Specification
--------------------------------------------------------------------------------------

- The player is represented by a shape which is defined in the config file
- The player must spawn in the center of the screen at the beginning of the  
  game, and after it dies, (collides with an enemy)
- The player moves by a speed read from the config file in these directions:
  Up: W key, Left: A Key, Down: S Key, Right: D Key
- The player is confined to move only within the bounds of the window
- The player will shoot a bullet toward the mouse pointer when the left mouse
  button is clicked. The speed, size, and lifespan of the bullets are read 
  from the config file.

Special Ability
  - you are free to come up with your own 'special move' which is fired by
    the player when the right mouse button is clicked. This special ability must:
    - Multiple entities ( bullets etc) spawned by special weapon
    - Entities have some unique graphic associated with them
    - A Unique game mechanic is introduced via a new component
    - A 'cooldown timer' must be implemented for the special weapon
  The properties of the special move are not in the config file.

Enemy(s):
- Enemies will spawn in a random location on the screen every X frames,
  where X is defined in the configuration file.
- Enemies must not overlap the sides of the screen at the time of spawn.
- Enemies shapes have random number of vertices, between a given minimum and
  maximum number, which is defined in the config file.
- Enemy shape radius will by specified in the configuration file.
- Enemies will be given a random color upon spawning.
- Enemies will be given a random speed upon spawning, between a minimum and
  maximum value specified in the config file.
- When an enemy reaches the edge of the window, it should bounce off in
  the opposite direction at the same speed.
- When large enemies collide with a bullet or player, they are destroyed,
  and N small enemies spawn in its place, where N is the number of vertices
  of the original enemy. Each small enemy must have the same number of 
  vertices and color of the original enemy. These small entities travel
  outward at angles at a fixed intervals equal to (360 / vertices).
  For example, if the original enemy had 6 sides, the 6 smaller enenmies will
  travel outward in intervals of (360/6) = 60 degrees.

Score:

- Each time an enemy spawns, it is given a score component of N*100, where N
  is the number of vertices is has. Small enemies get double this value.
- If a player bullet kills an enemy, the game score is increased by the score
  component of the enemy killed.
- The score should be displayed with the font specified by the config file in 
  the top-left corner of the screen.

Drawing:

- I n the render system, all entities should be given a slow rotation, which
  makes the game look a little nicer.
- Any Special effects which do not alter game play can be added for up to 
  5% bonus marks, but the 5% bonus can overwrite any marks lost in other 
  areasof the assignment.
- Any entity with a lifespan is currently alive, it should have, it should have its color
  alpha channel set to a ratio depending on how long it has left to live.
  For example: if an entity has a 100 frame life span, and it has benn alive for
  50 frames, its alpha value should be set to 0.5 * 255. The alpha should go from
  255 when it is first spawned, to 0 on the last frame it is alive.
Misc:
- The 'P' key should pause the game
- The 'ESC' key should close the game

Configuration File:

The configuration file will have one line each specifying the window size,
font format, player, bullet specification, and enenmy specifications.

Window W H FL FS
- this line declares that the SFML Window must be constructed with width W 
  and height H, each of which will be integers. FL is the frame limit that the
  window should be set to, and FS will be an integer which specifies whether to
  display the application in full-screen mode (1) or not (0).

Font F S R G B
- This line defines the font which is to be used to draw text
  for this program. the format of the lines os as follows:
  Font File   F   std::string ( it will have no spaces)
  Font Size   S   integer
  RGB color   (R, G ,B) int, int, int

Player Specification:

Player SR CR S FR FG FB OR OG OB OT V

  Shape Radius         SR            int
  Collision Radius     CR            int
  Speed                S             float
  Fill Color           FR, FG, FB    int, int, int
  Outline Color        OR, OG, OB    int, int, int
  Outline thickness    OT            int
  Shape Vertices       V             int

Enemy Specification:

Enemy SR CR SMIN SMAX OR OG OB OT VMIN VMAX L SI

  Shape Radius         SR            int
  Collision Radius     CR            int
  Min / Max Speed      SMIN, SMAX    float, float
  Outline Color        OR OG OB      int, int, int
  outline thickness    OT            int
  Min/Max Vertices     VMIN, VMAX    int, int
  Small Lifespan       L             int
  Spawn interval       SI

Bullet Specification:

Bullet SR CR S FR FG FB OR OG OB OT V L
  Shape Radius         SR            int
  Collision Radius     CR            int
  Speed                S             float
  Fill Color           FR, FG, FB    int, int, int
  Outline Color        OR, OG, OB    int, int, int
  Outline Thickness    OT            int
  Shape Vertices       V             int
  Lifespan             L             int

--------------------------------------------------------------------------------------
--Assignment hints
--------------------------------------------------------------------------------------



